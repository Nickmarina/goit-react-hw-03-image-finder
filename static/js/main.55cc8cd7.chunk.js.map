{"version":3,"sources":["components/Searchbar/index.jsx","components/ImageGallery/index.jsx","services/galleryApi.js","App.jsx","index.js"],"names":["Searchbar","onChangeQuery","query","useState","input","setInput","className","onSubmit","e","preventDefault","type","value","autoComplete","autoFocus","placeholder","onChange","currentTarget","ImageGallery","gallery","map","id","webformatURL","tags","largeImageURL","src","alt","apiKey","App","setQuery","page","setGallery","isLoading","setIsLoading","error","setError","useEffect","axios","get","then","data","hits","catch","console","log","fetchPictures","message","finally","newQuery","onClick","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAmCeA,EAjCG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,cAA2B,KAAZC,MACRC,mBAAS,KADW,mBACvCC,EADuC,KAChCC,EADgC,KAa9C,OACE,wBAAQC,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaC,SARZ,SAACC,GACpBA,EAAEC,iBACFR,EAAcG,GACdC,EAAS,KAKP,UACE,wBAAQK,KAAK,SAASJ,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAEF,uBACEA,UAAU,mBACVK,MAAOP,EACPM,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAvBkB,SAACP,GACzBH,EAASG,EAAEQ,cAAcL,gBCWdM,G,KAhBM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,oBAAIZ,UAAU,eAAd,SACGY,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAA6BC,GAApC,EAAqBC,cAArB,EAAoCD,MAApC,OACX,oBAAahB,UAAU,mBAAvB,SACE,qBACEkB,IAAKH,EACLI,IAAKH,EACLhB,UAAU,4BAJLc,U,iBCHXM,EAAS,qCCqDAC,EAjDH,WAAO,IAAD,EACUxB,mBAAS,IADnB,mBACTD,EADS,KACF0B,EADE,OAEQzB,mBAAS,GAFjB,mBAET0B,EAFS,aAGc1B,mBAAS,KAHvB,mBAGTe,EAHS,KAGAY,EAHA,OAIkB3B,oBAAS,GAJ3B,mBAIT4B,EAJS,KAIEC,EAJF,OAKU7B,qBALV,mBAKT8B,EALS,KAKFC,EALE,KAgChB,OAbAC,qBAAU,WACHjC,IAEL8B,GAAa,GDxBY,WAA2B,IAA1B9B,EAAyB,uDAAjB,GAAI2B,EAAa,uDAAN,EAC/C,OAAOO,IACJC,IADI,6EAEmEnC,EAFnE,iBAEiF2B,EAFjF,4BAEyGH,IAE7GY,MAAK,qBAAGC,KAAgBC,QACxBC,OAAM,SAACR,GAAD,OAAWS,QAAQC,IAAIV,MCoB9BW,CAAc1C,EAAO2B,GAClBS,MAAK,SAACC,GACLT,EAAWS,MAEZE,OAAM,SAACR,GAAD,OAAWC,EAASD,EAAMY,YAChCC,SAAQ,kBAAMd,GAAa,SAC7B,CAAC9B,IAGF,qCACE,cAAC,EAAD,CAAWD,cA3BW,SAAC8C,GACzBnB,EAASmB,IA0BsC7C,MAAOA,IACpD,iCACG+B,GACC,8BACGA,EADH,IACU,wBAAQe,QAAS,kBAAMd,OAASe,IAAhC,kBAIXlB,GAAa,2CACd,cAAC,EAAD,CAAcb,QAASA,WC7C/BgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.55cc8cd7.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Searchbar = ({ onChangeQuery, query }) => {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const HandleChangeInput = (e) => {\r\n    setInput(e.currentTarget.value);\r\n  };\r\n\r\n  const HandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onChangeQuery(input);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={HandleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          value={input}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={HandleChangeInput}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n","import \"../../styles.css\";\r\nconst ImageGallery = ({ gallery }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {gallery.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <li key={id} className=\"ImageGalleryItem\">\r\n          <img\r\n            src={webformatURL}\r\n            alt={tags}\r\n            className=\"ImageGalleryItem-image\"\r\n          ></img>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import axios from \"axios\";\r\n\r\nconst apiKey = \"20361468-1e955d15f48e5b2a394a029cb\";\r\n\r\nexport const fetchPictures = (query = \"\", page = 1) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${apiKey}`\r\n    )\r\n    .then(({ data }) => data.hits)\r\n    .catch((error) => console.log(error));\r\n};\r\n","import { useState, useEffect } from \"react\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport { fetchPictures } from \"./services/galleryApi\";\nimport \"./styles.css\";\n\nconst App = () => {\n  const [query, setQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [gallery, setGallery] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const HandleChangeQuery = (newQuery) => {\n    setQuery(newQuery);\n  };\n\n  const HandleChangePage = () => {\n    setPage((prev) => prev + 1);\n  };\n\n  // useEffect(() => {\n  //   setPage(1);\n  // }, [query]);\n\n  useEffect(() => {\n    if (!query) return;\n\n    setIsLoading(true);\n\n    fetchPictures(query, page)\n      .then((data) => {\n        setGallery(data);\n      })\n      .catch((error) => setError(error.message))\n      .finally(() => setIsLoading(false));\n  }, [query]);\n\n  return (\n    <>\n      <Searchbar onChangeQuery={HandleChangeQuery} query={query} />\n      <main>\n        {error && (\n          <p>\n            {error} <button onClick={() => setError(undefined)}>x</button>\n          </p>\n        )}\n\n        {isLoading && <p>Loading...</p>}\n        <ImageGallery gallery={gallery} />\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}